// Code generated DO NOT EDIT
// This code is AUTOGENERATED and will be overwritten by "go generate", so
// editing this file is a waste of time. To make changes, edit the template
// in pkg/generator/template/subcommand.tmpl. If you want to execute things
// before or after the command is executed, use a hook. See the usage_hook.go
// as an example.

package project

import (
	cloudv1 "buf.build/gen/go/gportal/gportal-cloud/protocolbuffers/go/gpcloud/api/cloud/v1"
	"encoding/json"
	"github.com/G-PORTAL/gpcloud-go/pkg/gpcloud/client"
	"github.com/spf13/cobra"
	"gpcloud-cli/pkg/config"
)

var accept bool

var joinCmd = &cobra.Command{
	Use:                   "join",
	Short:                 "",
	Long:                  "",
	DisableFlagsInUseLine: true,
	Args:                  cobra.OnlyValidArgs,
	ValidArgs: []string{
		"accept",
	},

	RunE: func(cmd *cobra.Command, args []string) error {
		conn := cmd.Context().Value("conn").(*client.Client)
		session := cmd.Context().Value("session").(*config.SessionConfig)
		resp, err := conn.CloudClient().JoinProject(cmd.Context(), &cloudv1.JoinProjectRequest{
			Id:     *session.CurrentProject,
			Accept: accept,
		})
		if err != nil {
			return err
		}

		// TODO: Call hook if exist
		jsonData, err := json.MarshalIndent(resp, "", "  ")

		// TODO: Set the header from the child elements
		// TODO: Append rows from the child elements
		// TODO: Render the table
		// TODO: Handle nested structures

		// TODO: Only Output response as json if requests with --json flag,
		// Otherwise, output a human readable table
		cmd.Println(string(jsonData))

		return nil
	},
}

func init() {
	joinCmd.Flags().BoolVar(&accept, "accept", false, "TODO: Add description")

	RootProjectCommand.AddCommand(joinCmd)
}
