actions:
  list:
    api-call: cloud.ListProjects
    identifier: nil
    root-key: Projects
    fields:
      - Id
      - Name
      - Description
      - Currency.Currency
      - Environment.ProjectEnvironment

  get:
    api-call: cloud.GetProject
    identifier: nil
    params:
      - name: id
        type: string
        description: Project ID
        required: true

  # TODO: Fix after dependency upgrade
  update:
    api-call: cloud.UpdateProject
    params:
      - name: name
        type: string
        description: Project name
        required: true
      - name: description
        type: string
        description: Project description
        required: true
      - name: environment
        type: cloudv1.ProjectEnvironment
        description: Project environment
        default: cloudv1.PROJECT_ENVIRONMENT_DEVELOPMENT
        required: true
      - name: credit_card_id
        type: string
        description: Credit card ID
        required: true
      - name: billing_address_id
        type: string
        description: Billing address ID
        required: true

  create:
    api-call: cloud.CreateProject
    description: Create a new project
    identifier: nil
    params:
      - name: name
        type: string
        description: Project name
        required: true
      - name: description
        type: string
        default: ""
      - name: environment
        type: cloudv1.ProjectEnvironment
        default: cloudv1.PROJECT_ENVIRONMENT_DEVELOPMENT
        required: true
      - name: billing_address_id
        type: string
        required: true

  delete:
    api-call: cloud.DeleteProject
    identifier: nil
    params:
      - name: id
        type: string
        description: Project ID to delete
        required: true

  flavours:
    api-call: cloud.ListProjectFlavours
    params:
      - name: datacenter_id
        description: Datacenter to fetch the flavours from
        type: string
        required: true
    fields:
      - Id
      - Name
      - Availability.FlavourAvailability
      - PricePerMonth.Price
      - PricePerHour.Price

  networks:
    api-call: admin.ListProjectNetworks

  # network-create is implemented in code, because it is a special case
  # where we need to create a network and then attach it to the project.
  # Also, the datacenter is a struct, which is not possible to pass as a
  # parameter.

  logs:
    api-call: cloudv2.ListProjectLogs
    fields:
      - CreatedAt.DateTime
      - User.BasicUser
      - Message

  # Join/Leave project
  join:
    api-call: cloud.JoinProject
    params:
      - name: accept
        type: bool
        default: false

  leave:
    api-call: cloud.LeaveProject

  invite-member:
    api-call: cloud.InviteMemberToProject
    identifier: nil
    params:
      - name: id
        description: Project ID
        type: string
        required: true
      - name: identifier
        ##description: ??
        type: string
        required: true

  remove-member:
    api-call: cloud.RemoveMemberFromProject
    params:
      - name: user_id
        type: string
        required: true

  default-project:
    api-call: cloud.ChangeDefaultProject
    identifier: nil
    params:
      - name: id
        type: string
        description: New default project ID
        required: true

  # Project information
  locks:
    api-call: cloud.GetProjectLocks
    description: List all locks in the project

  usage:
    api-call: cloud.GetProjectUsage
    params:
      - name: detailed
        type: bool
        default: false

  images:
    api-call: cloud.ListProjectImages

  # TODO: Custom formatter to output keys in authorized_keys format
  ssh-keys:
    api-call: cloud.ListProjectSSHKeys
    root-key: Keys
    fields:
      - User.BasicUser
      - SshKey.SshKey


identifier: session.CurrentProject
